jobs:
- job: macOS
  pool:
    vmImage: macOS-10.13
  steps:
    - bash: |
        set -e
        sudo xcode-select --switch /Applications/Xcode_10.1.app/Contents/Developer
        brew update-reset /usr/local/Homebrew
        ln -s "$PWD" "/usr/local/Homebrew/Library/Taps/homebrew/homebrew-test-bot"
        brew test-bot
        brew test-bot --ci-upload --dry-run
        brew test-bot --ci-pr https://github.com/Homebrew/brew/pull/4170 --dry-run
        brew test-bot --ci-pr https://github.com/Homebrew/brew/commit/dc96e6f73551fbadd0c2169c3a79c47a936f71ae --dry-run
      displayName: Run brew test-bot
      env:
        HOMEBREW_GITHUB_API_TOKEN: $(github.publicApiToken)
        HOMEBREW_COVERALLS_REPO_TOKEN: $(coveralls.homebrewTestBotApiToken)

    - task: PublishTestResults@2
      displayName: Publish test-bot test results
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: brew-test-bot.xml

    - task: PublishCodeCoverageResults@1
      displayName: Publish brew tests code coverage
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Build.SourcesDirectory)/coverage/coverage.xml
        reportDirectory: $(Build.SourcesDirectory)/coverage
        failIfCoverageEmpty: true

- job: Linux
  pool:
    vmImage: ubuntu-16.04
  steps:
    - bash: git clone https://github.com/Homebrew/brew
      displayName: Clone Homebrew/brew

    - bash: |
        set -e
        cd brew
        docker-compose -f Dockerfile.yml build sut
      displayName: Build Docker image

    - bash: |
        set -e
        cd brew
        docker-compose -f Dockerfile.yml run --rm -v $(Build.ArtifactStagingDirectory):/tmp/test-bot sut
      displayName: Run brew test-bot
      env:
        HOMEBREW_GITHUB_API_TOKEN: $(github.publicApiToken)

    - task: PublishTestResults@2
      displayName: Publish test-bot test results
      condition: succeededOrFailed()
      inputs:
        testRunner: JUnit
        testResultsFiles: brew/brew-test-bot.xml
